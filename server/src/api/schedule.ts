import { Router, Request, Response } from 'express';
import { z } from 'zod';
import { ApiResponse } from '@/types';

const router = Router();

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
interface ScheduleItem {
  date: string;
  time: string;
  subject: string;
  teacher: string;
  room: string;
  type: 'lecture' | 'seminar' | 'lab' | 'exam';
  group?: string;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
const getScheduleSchema = z.object({
  dateFrom: z.string().date(),
  dateTo: z.string().date(),
  type: z.enum(['group', 'teacher', 'room']),
  value: z.string().min(1, '–ó–Ω–∞—á–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'),
});

// –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–≥–æ API
router.get('/', async (req: Request, res: Response) => {
  try {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const query = getScheduleSchema.parse(req.query);

    // –ó–î–ï–°–¨: –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–µ API
    const universitySchedule = await fetchUniversitySchedule(query);

    res.json({
      success: true,
      data: universitySchedule,
      message: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ'
    } as ApiResponse);

  } catch (error) {
    if (error instanceof z.ZodError) {
      res.status(400).json({
        success: false,
        error: '–ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞',
        details: error.errors
      } as ApiResponse);
      return;
    }

    console.error('Get schedule error:', error);
    res.status(500).json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    } as ApiResponse);
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–≥–æ API
async function fetchUniversitySchedule(filters: z.infer<typeof getScheduleSchema>): Promise<ScheduleItem[]> {
  
  // üéØ –í–ê–†–ò–ê–ù–¢ 1: –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
  // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL —Ä–µ–∞–ª—å–Ω–æ–≥–æ API –≤–∞—à–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
  const UNIVERSITY_API_URL = process.env.UNIVERSITY_API_URL || 'https://rasp.univer.ru/api';
  
  try {
    const response = await fetch(`${UNIVERSITY_API_URL}/schedule`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        // –î–æ–±–∞–≤—å—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
        // 'Authorization': `Bearer ${process.env.UNIVERSITY_API_TOKEN}`,
      },
      body: JSON.stringify(filters),
    });

    if (!response.ok) {
      throw new Error(`University API error: ${response.status}`);
    }

    const data = await response.json();
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –≤ –Ω–∞—à —Ñ–æ—Ä–º–∞—Ç
    return mapUniversityScheduleToOurFormat(data);

  } catch (error) {
    console.error('University API error:', error);
    
    // üéØ –í–ê–†–ò–ê–ù–¢ 2: Fallback - –≤–µ—Ä–Ω—É—Ç—å –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    return getMockSchedule(filters);
  }
}

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –≤ –Ω–∞—à —Ñ–æ—Ä–º–∞—Ç
function mapUniversityScheduleToOurFormat(universityData: any): ScheduleItem[] {
  // –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –ø–æ–¥ —Ñ–æ—Ä–º–∞—Ç –≤–∞—à–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
  return universityData.map((item: any) => ({
    date: item.date || item.day,
    time: item.time || item.timeslot,
    subject: item.subject || item.discipline,
    teacher: item.teacher || item.professor,
    room: item.room || item.auditorium,
    type: mapType(item.type),
    group: item.group,
  }));
}

// –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–∏–π
function mapType(universityType: string): ScheduleItem['type'] {
  const typeMap: Record<string, ScheduleItem['type']> = {
    '–ª–µ–∫—Ü–∏—è': 'lecture',
    '—Å–µ–º–∏–Ω–∞—Ä': 'seminar',
    '–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è': 'lab',
    '—ç–∫–∑–∞–º–µ–Ω': 'exam',
  };
  
  return typeMap[universityType.toLowerCase()] || 'lecture';
}

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (fallback)
function getMockSchedule(filters: z.infer<typeof getScheduleSchema>): ScheduleItem[] {
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  return [
    {
      date: '2024-01-22',
      time: '09:00',
      subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      teacher: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
      room: '101',
      type: 'lecture',
      group: filters.value,
    },
    {
      date: '2024-01-22',
      time: '11:00',
      subject: '–§–∏–∑–∏–∫–∞',
      teacher: '–ü–µ—Ç—Ä–æ–≤–∞ –ü.–ü.',
      room: '203',
      type: 'lab',
      group: filters.value,
    },
  ];
}

export default router;

